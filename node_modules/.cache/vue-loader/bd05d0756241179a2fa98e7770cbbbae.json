{"remainingRequest":"/Users/gkeele/dev/ldsmedia/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gkeele/dev/ldsmedia/web/src/views/EventList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gkeele/dev/ldsmedia/web/src/views/EventList.vue","mtime":1569613449000},{"path":"/Users/gkeele/dev/ldsmedia/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gkeele/dev/ldsmedia/web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gkeele/dev/ldsmedia/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gkeele/dev/ldsmedia/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBFdmVudENhcmQgZnJvbSAnQC9jb21wb25lbnRzL0V2ZW50Q2FyZC52dWUnCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCcKaW1wb3J0IHN0b3JlIGZyb20gJ0Avc3RvcmUvc3RvcmUnCgpmdW5jdGlvbiBnZXRQYWdlRXZlbnRzKHJvdXRlVG8sIG5leHQpIHsKICBjb25zdCBjdXJyZW50UGFnZSA9IHBhcnNlSW50KHJvdXRlVG8ucXVlcnkucGFnZSkgfHwgMQogIHN0b3JlCiAgICAuZGlzcGF0Y2goJ2V2ZW50L2ZldGNoRXZlbnRzJywgewogICAgICBwYWdlOiBjdXJyZW50UGFnZQogICAgfSkKICAgIC50aGVuKCgpID0+IHsKICAgICAgcm91dGVUby5wYXJhbXMucGFnZSA9IGN1cnJlbnRQYWdlCiAgICAgIG5leHQoKQogICAgfSkKfQoKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBwYWdlOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIEV2ZW50Q2FyZAogIH0sCiAgYmVmb3JlUm91dGVFbnRlcihyb3V0ZVRvLCByb3V0ZUZyb20sIG5leHQpIHsKICAgIGdldFBhZ2VFdmVudHMocm91dGVUbywgbmV4dCkKICB9LAogIGJlZm9yZVJvdXRlVXBkYXRlKHJvdXRlVG8sIHJvdXRlRnJvbSwgbmV4dCkgewogICAgZ2V0UGFnZUV2ZW50cyhyb3V0ZVRvLCBuZXh0KQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGhhc05leHRQYWdlKCkgewogICAgICByZXR1cm4gdGhpcy5ldmVudC5ldmVudHNUb3RhbCA+IHRoaXMucGFnZSAqIHRoaXMuZXZlbnQucGVyUGFnZQogICAgfSwKICAgIC4uLm1hcFN0YXRlKFsnZXZlbnQnLCAndXNlciddKQogIH0KfQo="},{"version":3,"sources":["EventList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EventList.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <h1>Events for {{ user.user.name }}</h1>\n    <EventCard v-for=\"event in event.events\" :key=\"event.id\" :event=\"event\"/>\n    <template v-if=\"page != 1\">\n      <router-link :to=\"{ name: 'event-list', query: { page: page - 1 } }\" rel=\"prev\">\n      Prev Page</router-link>\n      <template v-if=\"hasNextPage\"> | </template>\n    </template>\n    <router-link v-if=\"hasNextPage\" :to=\"{ name: 'event-list', query: { page: page + 1 } }\" rel=\"next\">\n      Next Page</router-link>\n  </div>\n</template>\n\n<script>\nimport EventCard from '@/components/EventCard.vue'\nimport { mapState } from 'vuex'\nimport store from '@/store/store'\n\nfunction getPageEvents(routeTo, next) {\n  const currentPage = parseInt(routeTo.query.page) || 1\n  store\n    .dispatch('event/fetchEvents', {\n      page: currentPage\n    })\n    .then(() => {\n      routeTo.params.page = currentPage\n      next()\n    })\n}\n\nexport default {\n  props: {\n    page: {\n      type: Number,\n      required: true\n    }\n  },\n  components: {\n    EventCard\n  },\n  beforeRouteEnter(routeTo, routeFrom, next) {\n    getPageEvents(routeTo, next)\n  },\n  beforeRouteUpdate(routeTo, routeFrom, next) {\n    getPageEvents(routeTo, next)\n  },\n  computed: {\n    hasNextPage() {\n      return this.event.eventsTotal > this.page * this.event.perPage\n    },\n    ...mapState(['event', 'user'])\n  }\n}\n</script>\n"]}]}