{"remainingRequest":"/Users/gkeele/dev/ldsmedia/web/node_modules/babel-loader/lib/index.js!/Users/gkeele/dev/ldsmedia/web/node_modules/eslint-loader/index.js??ref--13-0!/Users/gkeele/dev/ldsmedia/web/src/store/modules/event.js","dependencies":[{"path":"/Users/gkeele/dev/ldsmedia/web/src/store/modules/event.js","mtime":1576281017210},{"path":"/Users/gkeele/dev/ldsmedia/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gkeele/dev/ldsmedia/web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gkeele/dev/ldsmedia/web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnBhcnNlLWludCI7CmltcG9ydCBFdmVudFNlcnZpY2UgZnJvbSAnQC9zZXJ2aWNlcy9FdmVudFNlcnZpY2UuanMnOwpleHBvcnQgdmFyIG5hbWVzcGFjZWQgPSB0cnVlOwpleHBvcnQgdmFyIHN0YXRlID0gewogIGV2ZW50czogW10sCiAgZXZlbnRzVG90YWw6IDAsCiAgZXZlbnQ6IHt9Cn07CmV4cG9ydCB2YXIgbXV0YXRpb25zID0gewogIEFERF9FVkVOVDogZnVuY3Rpb24gQUREX0VWRU5UKHN0YXRlLCBldmVudCkgewogICAgc3RhdGUuZXZlbnRzLnB1c2goZXZlbnQpOwogIH0sCiAgU0VUX0VWRU5UUzogZnVuY3Rpb24gU0VUX0VWRU5UUyhzdGF0ZSwgZXZlbnRzKSB7CiAgICBzdGF0ZS5ldmVudHMgPSBldmVudHM7CiAgfSwKICBTRVRfRVZFTlRTX1RPVEFMOiBmdW5jdGlvbiBTRVRfRVZFTlRTX1RPVEFMKHN0YXRlLCBldmVudHNUb3RhbCkgewogICAgc3RhdGUuZXZlbnRzVG90YWwgPSBldmVudHNUb3RhbDsKICB9LAogIFNFVF9FVkVOVDogZnVuY3Rpb24gU0VUX0VWRU5UKHN0YXRlLCBldmVudCkgewogICAgc3RhdGUuZXZlbnQgPSBldmVudDsKICB9Cn07CmV4cG9ydCB2YXIgYWN0aW9ucyA9IHsKICBjcmVhdGVFdmVudDogZnVuY3Rpb24gY3JlYXRlRXZlbnQoX3JlZiwgZXZlbnQpIHsKICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgIHJldHVybiBFdmVudFNlcnZpY2UucG9zdEV2ZW50KGV2ZW50KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgY29tbWl0KCdBRERfRVZFTlQnLCBldmVudCk7CiAgICB9KTsKICB9LAogIGZldGNoRXZlbnRzOiBmdW5jdGlvbiBmZXRjaEV2ZW50cyhfcmVmMiwgX3JlZjMpIHsKICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICB2YXIgcGVyUGFnZSA9IF9yZWYzLnBlclBhZ2UsCiAgICAgICAgcGFnZSA9IF9yZWYzLnBhZ2U7CiAgICBFdmVudFNlcnZpY2UuZ2V0RXZlbnRzKHBlclBhZ2UsIHBhZ2UpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIGNvbnNvbGUubG9nKCdUb3RhbCBldmVudHMgYXJlICcgKyByZXNwb25zZS5oZWFkZXJzWyd4LXRvdGFsLWNvdW50J10pOwogICAgICBjb21taXQoJ1NFVF9FVkVOVFNfVE9UQUwnLCBwYXJzZUludChyZXNwb25zZS5oZWFkZXJzWyd4LXRvdGFsLWNvdW50J10pKTsKICAgICAgY29tbWl0KCdTRVRfRVZFTlRTJywgcmVzcG9uc2UuZGF0YSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgY29uc29sZS5sb2coJ1RoZXJlIHdhcyBhbiBlcnJvOicgKyBlcnJvci5yZXNwb25zZSk7CiAgICB9KTsKICB9LAogIGZldGNoRXZlbnQ6IGZ1bmN0aW9uIGZldGNoRXZlbnQoX3JlZjQsIGlkKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0LAogICAgICAgIGdldHRlcnMgPSBfcmVmNC5nZXR0ZXJzOwogICAgdmFyIGV2ZW50ID0gZ2V0dGVycy5nZXRFdmVudEJ5SWQoaWQpOwoKICAgIGlmIChldmVudCkgewogICAgICBjb21taXQoJ1NFVF9FVkVOVCcsIGV2ZW50KTsKICAgIH0gZWxzZSB7CiAgICAgIEV2ZW50U2VydmljZS5nZXRFdmVudChpZCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBjb21taXQoJ1NFVF9FVkVOVCcsIHJlc3BvbnNlLmRhdGEpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZygnVGhlcmUgd2FzIGFuIGVycm9yOicsIGVycm9yLnJlc3BvbnNlKTsKICAgICAgfSk7CiAgICB9CiAgfQp9OwpleHBvcnQgdmFyIGdldHRlcnMgPSB7CiAgY2F0TGVuZ3RoOiBmdW5jdGlvbiBjYXRMZW5ndGgoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5jYXRlZ29yaWVzLmxlbmd0aDsKICB9LAogIGRvbmVUb2RvczogZnVuY3Rpb24gZG9uZVRvZG9zKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUudG9kb3MuZmlsdGVyKGZ1bmN0aW9uICh0b2RvKSB7CiAgICAgIHJldHVybiB0b2RvLmRvbmU7CiAgICB9KTsKICB9LAogIGFjdGl2ZVRvZG9zQ291bnQ6IGZ1bmN0aW9uIGFjdGl2ZVRvZG9zQ291bnQoc3RhdGUsIGdldHRlcnMpIHsKICAgIHJldHVybiBzdGF0ZS50b2Rvcy5sZW5ndGggLSBnZXR0ZXJzLmRvbmVUb2Rvcy5sZW5ndGg7CiAgfSwKICBnZXRFdmVudEJ5SWQ6IGZ1bmN0aW9uIGdldEV2ZW50QnlJZChzdGF0ZSkgewogICAgcmV0dXJuIGZ1bmN0aW9uIChpZCkgewogICAgICByZXR1cm4gc3RhdGUuZXZlbnRzLmZpbmQoZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIGV2ZW50LmlkID09PSBpZDsKICAgICAgfSk7CiAgICB9OwogIH0KfTs="},{"version":3,"sources":["/Users/gkeele/dev/ldsmedia/web/src/store/modules/event.js"],"names":["EventService","namespaced","state","events","eventsTotal","event","mutations","ADD_EVENT","push","SET_EVENTS","SET_EVENTS_TOTAL","SET_EVENT","actions","createEvent","commit","postEvent","then","fetchEvents","perPage","page","getEvents","response","console","log","headers","parseInt","data","catch","error","fetchEvent","id","getters","getEventById","getEvent","catLength","categories","length","doneTodos","todos","filter","todo","done","activeTodosCount","find"],"mappings":"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","sourcesContent":["import EventService from '@/services/EventService.js'\n\nexport const namespaced = true\n\nexport const state = {\n  events: [],\n  eventsTotal: 0,\n  event: {}\n}\n\nexport const mutations = {\n  ADD_EVENT(state, event) {\n    state.events.push(event)\n  },\n  SET_EVENTS(state, events) {\n    state.events = events\n  },\n  SET_EVENTS_TOTAL(state, eventsTotal) {\n    state.eventsTotal = eventsTotal\n  },\n  SET_EVENT(state, event) {\n    state.event = event\n  }\n}\n\nexport const actions = {\n  createEvent({ commit }, event) {\n    return EventService.postEvent(event).then(() => {\n      commit('ADD_EVENT', event)\n    })\n  },\n  fetchEvents({ commit }, { perPage, page }) {\n    EventService.getEvents(perPage, page)\n      .then(response => {\n        console.log('Total events are ' + response.headers['x-total-count'])\n        commit('SET_EVENTS_TOTAL', parseInt(response.headers['x-total-count']))\n        commit('SET_EVENTS', response.data)\n      })\n      .catch(error => {\n        console.log('There was an erro:' + error.response)\n      })\n  },\n  fetchEvent({ commit, getters }, id) {\n    var event = getters.getEventById(id)\n\n    if (event) {\n      commit('SET_EVENT', event)\n    } else {\n      EventService.getEvent(id)\n        .then(response => {\n          commit('SET_EVENT', response.data)\n        })\n        .catch(error => {\n          console.log('There was an error:', error.response)\n        })\n    }\n  }\n}\n\nexport const getters = {\n  catLength: state => {\n    return state.categories.length\n  },\n  doneTodos: state => {\n    return state.todos.filter(todo => todo.done)\n  },\n  activeTodosCount: (state, getters) => {\n    return state.todos.length - getters.doneTodos.length\n  },\n  getEventById: state => id => {\n    return state.events.find(event => event.id === id)\n  }\n}\n"]}]}