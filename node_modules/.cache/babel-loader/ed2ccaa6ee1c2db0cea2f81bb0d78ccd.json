{"remainingRequest":"/Users/gkeele/dev/ldsmedia/web/node_modules/babel-loader/lib/index.js!/Users/gkeele/dev/ldsmedia/web/node_modules/eslint-loader/index.js??ref--13-0!/Users/gkeele/dev/ldsmedia/web/src/store/modules/event.js","dependencies":[{"path":"/Users/gkeele/dev/ldsmedia/web/src/store/modules/event.js","mtime":1569613449000},{"path":"/Users/gkeele/dev/ldsmedia/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gkeele/dev/ldsmedia/web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gkeele/dev/ldsmedia/web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnBhcnNlLWludCI7CmltcG9ydCBFdmVudFNlcnZpY2UgZnJvbSAnQC9zZXJ2aWNlcy9FdmVudFNlcnZpY2UuanMnOwpleHBvcnQgdmFyIG5hbWVzcGFjZWQgPSB0cnVlOwpleHBvcnQgdmFyIHN0YXRlID0gewogIGV2ZW50czogW10sCiAgZXZlbnRzVG90YWw6IDAsCiAgZXZlbnQ6IHt9LAogIHBlclBhZ2U6IDMKfTsKZXhwb3J0IHZhciBtdXRhdGlvbnMgPSB7CiAgQUREX0VWRU5UOiBmdW5jdGlvbiBBRERfRVZFTlQoc3RhdGUsIGV2ZW50KSB7CiAgICBzdGF0ZS5ldmVudHMucHVzaChldmVudCk7CiAgfSwKICBTRVRfRVZFTlRTOiBmdW5jdGlvbiBTRVRfRVZFTlRTKHN0YXRlLCBldmVudHMpIHsKICAgIHN0YXRlLmV2ZW50cyA9IGV2ZW50czsKICB9LAogIFNFVF9FVkVOVFNfVE9UQUw6IGZ1bmN0aW9uIFNFVF9FVkVOVFNfVE9UQUwoc3RhdGUsIGV2ZW50c1RvdGFsKSB7CiAgICBzdGF0ZS5ldmVudHNUb3RhbCA9IGV2ZW50c1RvdGFsOwogIH0sCiAgU0VUX0VWRU5UOiBmdW5jdGlvbiBTRVRfRVZFTlQoc3RhdGUsIGV2ZW50KSB7CiAgICBzdGF0ZS5ldmVudCA9IGV2ZW50OwogIH0KfTsKZXhwb3J0IHZhciBhY3Rpb25zID0gewogIGNyZWF0ZUV2ZW50OiBmdW5jdGlvbiBjcmVhdGVFdmVudChfcmVmLCBldmVudCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0LAogICAgICAgIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaDsKICAgIHJldHVybiBFdmVudFNlcnZpY2UucG9zdEV2ZW50KGV2ZW50KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgY29tbWl0KCdBRERfRVZFTlQnLCBldmVudCk7CiAgICAgIGNvbW1pdCgnU0VUX0VWRU5UJywgZXZlbnQpOwogICAgICB2YXIgbm90aWZpY2F0aW9uID0gewogICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICBtZXNzYWdlOiAnWW91ciBldmVudCBoYXMgYmVlbiBjcmVhdGVkIScKICAgICAgfTsKICAgICAgZGlzcGF0Y2goJ25vdGlmaWNhdGlvbi9hZGQnLCBub3RpZmljYXRpb24sIHsKICAgICAgICByb290OiB0cnVlCiAgICAgIH0pOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIHZhciBub3RpZmljYXRpb24gPSB7CiAgICAgICAgdHlwZTogJ2Vycm9yJywKICAgICAgICBtZXNzYWdlOiAnVGhlcmUgd2FzIGEgcHJvYmxlbSBjcmVhdGluZyB5b3VyIGV2ZW50OiAnICsgZXJyb3IubWVzc2FnZQogICAgICB9OwogICAgICBkaXNwYXRjaCgnbm90aWZpY2F0aW9uL2FkZCcsIG5vdGlmaWNhdGlvbiwgewogICAgICAgIHJvb3Q6IHRydWUKICAgICAgfSk7CiAgICAgIHRocm93IGVycm9yOwogICAgfSk7CiAgfSwKICBmZXRjaEV2ZW50czogZnVuY3Rpb24gZmV0Y2hFdmVudHMoX3JlZjIsIF9yZWYzKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0LAogICAgICAgIGRpc3BhdGNoID0gX3JlZjIuZGlzcGF0Y2gsCiAgICAgICAgc3RhdGUgPSBfcmVmMi5zdGF0ZTsKICAgIHZhciBwYWdlID0gX3JlZjMucGFnZTsKICAgIHJldHVybiBFdmVudFNlcnZpY2UuZ2V0RXZlbnRzKHN0YXRlLnBlclBhZ2UsIHBhZ2UpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIGNvbW1pdCgnU0VUX0VWRU5UU19UT1RBTCcsIHBhcnNlSW50KHJlc3BvbnNlLmhlYWRlcnNbJ3gtdG90YWwtY291bnQnXSkpOwogICAgICBjb21taXQoJ1NFVF9FVkVOVFMnLCByZXNwb25zZS5kYXRhKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICB2YXIgbm90aWZpY2F0aW9uID0gewogICAgICAgIHR5cGU6ICdlcnJvcicsCiAgICAgICAgbWVzc2FnZTogJ1RoZXJlIHdhcyBhIHByb2JsZW0gZmV0Y2hpbmcgZXZlbnRzOiAnICsgZXJyb3IubWVzc2FnZQogICAgICB9OwogICAgICBkaXNwYXRjaCgnbm90aWZpY2F0aW9uL2FkZCcsIG5vdGlmaWNhdGlvbiwgewogICAgICAgIHJvb3Q6IHRydWUKICAgICAgfSk7CiAgICB9KTsKICB9LAogIGZldGNoRXZlbnQ6IGZ1bmN0aW9uIGZldGNoRXZlbnQoX3JlZjQsIGlkKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0LAogICAgICAgIGdldHRlcnMgPSBfcmVmNC5nZXR0ZXJzLAogICAgICAgIHN0YXRlID0gX3JlZjQuc3RhdGU7CgogICAgaWYgKGlkID09IHN0YXRlLmV2ZW50LmlkKSB7CiAgICAgIHJldHVybiBzdGF0ZS5ldmVudDsKICAgIH0KCiAgICB2YXIgZXZlbnQgPSBnZXR0ZXJzLmdldEV2ZW50QnlJZChpZCk7CgogICAgaWYgKGV2ZW50KSB7CiAgICAgIGNvbW1pdCgnU0VUX0VWRU5UJywgZXZlbnQpOwogICAgICByZXR1cm4gZXZlbnQ7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gRXZlbnRTZXJ2aWNlLmdldEV2ZW50KGlkKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbW1pdCgnU0VUX0VWRU5UJywgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgICAgIH0pOwogICAgfQogIH0KfTsKZXhwb3J0IHZhciBnZXR0ZXJzID0gewogIGdldEV2ZW50QnlJZDogZnVuY3Rpb24gZ2V0RXZlbnRCeUlkKHN0YXRlKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gKGlkKSB7CiAgICAgIHJldHVybiBzdGF0ZS5ldmVudHMuZmluZChmdW5jdGlvbiAoZXZlbnQpIHsKICAgICAgICByZXR1cm4gZXZlbnQuaWQgPT09IGlkOwogICAgICB9KTsKICAgIH07CiAgfQp9Ow=="},{"version":3,"sources":["/Users/gkeele/dev/ldsmedia/web/src/store/modules/event.js"],"names":["EventService","namespaced","state","events","eventsTotal","event","perPage","mutations","ADD_EVENT","push","SET_EVENTS","SET_EVENTS_TOTAL","SET_EVENT","actions","createEvent","commit","dispatch","postEvent","then","notification","type","message","root","catch","error","fetchEvents","page","getEvents","response","parseInt","headers","data","fetchEvent","id","getters","getEventById","getEvent","find"],"mappings":"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","sourcesContent":["import EventService from '@/services/EventService.js'\n\nexport const namespaced = true\n\nexport const state = {\n  events: [],\n  eventsTotal: 0,\n  event: {},\n  perPage: 3\n}\n\nexport const mutations = {\n  ADD_EVENT(state, event) {\n    state.events.push(event)\n  },\n  SET_EVENTS(state, events) {\n    state.events = events\n  },\n  SET_EVENTS_TOTAL(state, eventsTotal) {\n    state.eventsTotal = eventsTotal\n  },\n  SET_EVENT(state, event) {\n    state.event = event\n  }\n}\n\nexport const actions = {\n  createEvent({ commit, dispatch }, event) {\n    return EventService.postEvent(event)\n      .then(() => {\n        commit('ADD_EVENT', event)\n        commit('SET_EVENT', event)\n        const notification = {\n          type: 'success',\n          message: 'Your event has been created!'\n        }\n        dispatch('notification/add', notification, { root: true })\n      })\n      .catch(error => {\n        const notification = {\n          type: 'error',\n          message: 'There was a problem creating your event: ' + error.message\n        }\n        dispatch('notification/add', notification, { root: true })\n        throw error\n      })\n  },\n  fetchEvents({ commit, dispatch, state }, { page }) {\n    return EventService.getEvents(state.perPage, page)\n      .then(response => {\n        commit('SET_EVENTS_TOTAL', parseInt(response.headers['x-total-count']))\n        commit('SET_EVENTS', response.data)\n      })\n      .catch(error => {\n        const notification = {\n          type: 'error',\n          message: 'There was a problem fetching events: ' + error.message\n        }\n        dispatch('notification/add', notification, { root: true })\n      })\n  },\n  fetchEvent({ commit, getters, state }, id) {\n    if (id == state.event.id) {\n      return state.event\n    }\n\n    var event = getters.getEventById(id)\n\n    if (event) {\n      commit('SET_EVENT', event)\n      return event\n    } else {\n      return EventService.getEvent(id).then(response => {\n        commit('SET_EVENT', response.data)\n        return response.data\n      })\n    }\n  }\n}\nexport const getters = {\n  getEventById: state => id => {\n    return state.events.find(event => event.id === id)\n  }\n}\n"]}]}